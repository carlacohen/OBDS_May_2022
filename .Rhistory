knitr::opts_chunk$set(echo = TRUE)
library(DropletUtils)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(scDblFinder)
library(Seurat)
library(DoubletFinder)
library(celda)
library(scater)
library(DropletUtils)
sce <- DropletUtils::read10xCounts(
samples = c("pbmc5k" = "data/raw_feature_bc_matrix"),
col.names = TRUE
)
sce
sce <- sce[, colSums(assay(sce, "counts")) > 0]
sce
set.seed(1)
out <- DropletUtils::emptyDrops(assay(sce, "counts"))
out
out$FDR[1:200]
sce_filtered_emptydrops <- sce[, which(out$FDR <= 0.01)]
sce_filtered_emptydrops
plot_data <- tibble(
library_size = colSums(assay(sce, "counts")),
empty_droplet = out$FDR > 0.01
)
head(plot_data)
ggplot(plot_data, aes(empty_droplet, library_size)) +
geom_jitter(width = 0.1, height = 0) +
scale_y_continuous(trans = "log10") +
cowplot::theme_cowplot()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(cowplot)
library(DropletUtils)
library(SummarizedExperiment)
library(DelayedMatrixStats)
library(uwot)
library(Rtsne)
library(scran)
library(iSEE)
library(DropletUtils)
sce <- DropletUtils::read10xCounts(samples = c(
"filtered" = "data/filtered_feature_bc_matrix"
))
metadata(sce)
is.mito <- grepl("^MT-", rowData(sce)$Symbol)
table(is.mito)
library(scuttle)
sce <- scuttle::addPerCellQC(sce, percent_top = 50, subsets = list(MT=is.mito))
colnames(colData(sce))
plot1 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(Sample, sum)) +
labs(x = "Total UMI", y = "Value")
plot2 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(Sample, detected)) +
labs(x = "Genes detected", y = "Value")
plot3 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(Sample, subsets_MT_percent)) +
labs(x = "Percentage mitochondrial", y = "Value")
cowplot::plot_grid(plot1, plot2, plot3, nrow = 1)
is.mito <- grepl("^MT-", rowData(sce)$Symbol)
table(is.mito)
plot1 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(Sample, sum)) +
labs(x = "Total UMI", y = "Value")
plot2 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(Sample, detected)) +
labs(x = "Genes detected", y = "Value")
plot3 <- colData(sce) %>%
as_tibble() %>%
ggplot() +
geom_violin(aes(Sample, subsets_MT_percent)) +
labs(x = "Percentage mitochondrial", y = "Value")
cowplot::plot_grid(plot1, plot2, plot3, nrow = 1)
sce <- sce[, sce$sum > 4500 & sce$subsets_MT_percent < 15 & sce$detected > 1500]
sce
sce <- scuttle::addPerFeatureQC(sce)
rowData(sce) %>%
as_tibble() %>%
ggplot() +
geom_point(aes(detected / 100 * ncol(sce), log10(mean)))
sce <- scuttle::logNormCounts(sce)
assayNames(sce)
library(DelayedMatrixStats)
#
x <- DelayedArray(assay(sce, "counts"))
plot_data <- tibble(
mean = DelayedMatrixStats::rowMeans2(x),
variance = DelayedMatrixStats::rowVars(x)
)
plot_counts <- ggplot(plot_data, aes(mean, variance)) +
geom_point()
#
x <- DelayedArray(assay(sce, "logcounts"))
plot_data <- tibble(
mean = DelayedMatrixStats::rowMeans2(x),
variance = DelayedMatrixStats::rowVars(x)
)
plot_logcounts <- ggplot(plot_data, aes(mean, variance)) +
geom_point()
cowplot::plot_grid(plot_counts, plot_logcounts, nrow = 1)
library(scran)
dec <- scran::modelGeneVar(sce)
dec
ggplot(as_tibble(dec)) +
geom_point(aes(mean, total), color = "black") +
geom_point(aes(mean, bio), color = "blue") +
geom_point(aes(mean, tech), color = "red")
hvg <- scran::getTopHVGs(dec, prop=0.1)
length(hvg)
dec %>%
as_tibble() %>%
mutate(
gene_id = rownames(dec),
hvg = gene_id %in% hvg
) %>%
ggplot() +
geom_point(aes(mean, bio, color = hvg))
set.seed(1234)
sce <- scater::runPCA(sce, subset_row=hvg)
reducedDimNames(sce)
sce <- scater::runUMAP(sce, dimred = 'PCA', external_neighbors=TRUE)
reducedDimNames(sce)
sce_umap <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
ggplot() +
geom_point(aes(V1, V2, color=subsets_MT_percent)) +
cowplot::theme_cowplot()
sce_umap <- reducedDim(x = sce, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce) %>% as_tibble()) %>%
ggplot() +
geom_point(aes(V1, V2, color=subsets_MT_percent)) +
cowplot::theme_cowplot()
sce_umap
sce_denoise <- scran::denoisePCA(sce, dec, subset.row=hvg)
ncol(reducedDim(sce_denoise, "PCA"))
sce_denoise <- scater::runUMAP(sce_denoise, dimred = 'PCA', external_neighbors=TRUE)
reducedDimNames(sce_denoise)
sce_denoise_umap <- reducedDim(x = sce_denoise, type = "UMAP") %>%
as.data.frame() %>%
as_tibble() %>%
bind_cols(colData(sce_denoise) %>% as_tibble()) %>%
ggplot() +
geom_point(aes(V1, V2, color=subsets_MT_percent)) +
cowplot::theme_cowplot()
plot_grid(
sce_umap + theme(legend.position = "bottom"),
sce_denoise_umap + theme(legend.position = "bottom"),
nrow = 1)
